name: Build and push Docker image

on:
  push:
    # branches: ["main"] # restrict main branch (will uncomment after testing)
    paths-ignore:
      - "README.md"
      - "LICENSE"
      # Excluded because it looks like it is not used in Dockerfile
      - "*.bat"
      - "*.sh"
  pull_request:
    branches: ["main"]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      nocache:
        description: "Do not use cache"
        required: true
        type: boolean
        default: false
      runs-on:
        description: "Runs on"
        required: true
        type: string
        # default: "self-hosted"
        default: "ubuntu-latest"

env:
  REGISTRY: ghcr.io
  # <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and push Docker image
    runs-on: ${{ github.event.inputs.runs-on || 'ubuntu-latest' }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'
        with:
          cosign-release: "v2.2.4"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        continue-on-error: true
        if: ${{ ! github.event.inputs.nocache }}
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64

      - name: Build and push Docker image (ignore cache)
        uses: docker/build-push-action@v5
        id: build-and-push-nocache
        if: ${{ steps.build-and-push.outcome == 'failue' || github.event.inputs.nocache }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
